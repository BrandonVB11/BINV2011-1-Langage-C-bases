Solution du Quizz de la semaine 3 sur Moodle.

===== Question 1 =====
Complétez le programme suivant afin qu'il définisse le tableau tab et affiche :

tab[0] = 0
tab[1] = 0
tab[2] = 0
tab[3] = 0
tab[4] = 0
--- Code de Base ---
#include <stdio.h>
#include <stdlib.h>

int main () 
{
	// TODO
	for (int i=0; i<5; i++)
		printf("tab[%d] = %d\n", i, tab[i]);

	exit(0);
}
--- Code Solution ---
#include <stdio.h>
#include <stdlib.h>

int main () 
{
	// TODO
	int tab[5];
	tab[0] = 0;

	for (int i=0; i<5; i++)
		printf("tab[%d] = %d\n", i, tab[i]);

	exit(0);
}
===== Question 2 =====
Corrigez le programme suivant afin qu'il affiche :

tab[0] = A
tab[1] = B
tab[2] = C
tab[3] = D
tab[4] = E
tab[5] = F
tab[6] = G
--- Code de Base ---
#include <stdio.h>
#include <stdlib.h>

int main () 
{
	const int TAILLE = 7;
	char tab[TAILLE];

	tab[0] = 'A';
	for (int i=0; i<TAILLE; i++) {
		tab[i] = tab[0] + i;
		printf("tab[%d] = %c\n", i, tab[i]);
	}

	exit(0);
}
--- Code Solution ---
#include <stdio.h>
#include <stdlib.h>
#define TAILLE 7

int main () 
{
	char tab[TAILLE];

	tab[0] = 'A';
	for (int i=0; i<TAILLE; i++) {
		tab[i] = tab[0] + i;
		printf("tab[%d] = %c\n", i, tab[i]);
	}

	exit(0);
}
===== Question 3 =====
Complétez le programme suivant pour qu'il affiche 
"La valeur est dans le tableau" si l'entier rentré au clavier appartient au tableau et 
"La valeur n'est pas dans le tableau" sinon.

Attention, si le message n'est pas lettre pour lettre celui attendu, 
votre solution échouera aux tests.
--- Code de Base ---
#include <stdio.h>
#include <stdlib.h>

int main () 
{
	int tab[] = {12, 15, 13, 10, 8, 9, 13, 14};

	int val;
	scanf("%d", &val);

    // TODO
    
	exit(0);
}
--- Code Solution ---
#include <stdio.h>
#include <stdlib.h>

int main () 
{
	int tab[] = {12, 15, 13, 10, 8, 9, 13, 14};

	int val;
	scanf("%d", &val);
    for(int i = 0; i < 8;i++){
        if(tab[i] == val){
            printf("La valeur est dans le tableau");
			exit(0);
        }
    }
    // TODO
  printf("La valeur n'est pas dans le tableau");	
	exit(0);
}
===== Question 4 =====
Complétez ce programme qui saisit deux indices et échange les valeurs contenues dans un tableau à ces deux indices. 
Si un indice est incorrect, il affiche le message d'erreur "Indice incorrect" (respectez ce message à la lettre). 
Sinon, il affiche le contenu du tableau après transformation.
--- Code de Base ---
#include <stdio.h>
#include <stdlib.h>

#define SIZE 10

int main () 
{
	int tab[SIZE] = {1, 2, 3, 4, 5, 6, 7, 8};

	// Lecture des indices
	int ind1, ind2;
	scanf("%d %d", &ind1, &ind2);

	// Traitement des indices non valides
	// TODO

	// Permutation des deux éléments
	// TODO

	printf("Affichage du tableau apres permutation:\n");
	for (int i=0; i<SIZE; i++)
		printf("tab[%d] = %d\n", i, tab[i]);

	exit(0);
}
--- Code Solution ---
#include <stdio.h>
#include <stdlib.h>

#define SIZE 10

int main () 
{
	int tab[SIZE] = {1, 2, 3, 4, 5, 6, 7, 8};

	// Lecture des indices
	int ind1, ind2;
	scanf("%d %d", &ind1, &ind2);

	// Traitement des indices non valides
	// TODO
	if((ind1 < 0)|| (ind1 >= SIZE) || (ind2 < 0) || (ind2 >= SIZE)){
	    printf("Indice incorrect\n");
	    exit(0);
	}

	// Permutation des deux éléments
	// TODO
	int temp = tab[ind1];
	tab[ind1] = tab[ind2];
	tab[ind2] = temp;

	printf("Affichage du tableau apres permutation:\n");
	for (int i=0; i<SIZE; i++)
		printf("tab[%d] = %d\n", i, tab[i]);

	exit(0);
}
===== Question 5 =====
Complétez le programme pour qu'il initialise et affiche chaque élément d'une matrice 
avec la valeur l*c où l et c représentent respectivement l'indice de ligne et de colonne de cet élément.

Afin d'obtenir un affichage en colonnes de la matrice, utilisez le format :

    printf("%3d", ... )
N'oubliez pas la largeur 3 dans le format d'affichage!
--- Code de Base ---
#include <stdio.h>
#include <stdlib.h>

#define LIG 3
#define COL 5

int main () 
{
	// Initialisation de la matrice de dimensions LIGxCOL
	// TODO

	// Affichage de la matrice
	// TODO

	exit(0);
}
--- Code Solution ---
#include <stdio.h>
#include <stdlib.h>

#define LIG 3
#define COL 5

int main () 
{
	// Initialisation de la matrice de dimensions LIGxCOL
	// TODO
	int mat[LIG][COL];
		for (int l=0; l<LIG; l++)
		for (int c=0; c<COL; c++)
			mat[l][c] = l*c;

	// Affichage de la matrice
	for (int l=0; l<LIG; l++) {
		for (int c=0; c<COL; c++)
			printf("%3d", mat[l][c]);
		printf("\n");
	}


	exit(0);
}
===== Question 6 =====
Complétez le programme qui saisit 6 caractères et les stocke dans un tableau. Une fois celui-ci rempli, 
il affiche le contenu du tableau. 
Ensuite il recherche et affiche le plus grand élément du tableau.
--- Code de Base ---
#include <stdio.h>
#include <stdlib.h>

#define TAILLE 6

int main () 
{
	int i;
	int car;
	char tab[TAILLE];

	// Initialisation du tableau
	for (i=0; i<TAILLE; i++) {
		car = getchar();
		tab[i] = car;
	}

	// Affichage du tableau
	for (i=0; i<TAILLE; i++)
		printf("tab[%d] = '%c'\n", i, tab[i]);

	// Recherche du maximum
	// TODO
	
	printf("Le caractere maximum est '%c'\n", max);

	exit(0);
}
--- Code Solution ---
#include <stdio.h>
#include <stdlib.h>

#define LIG 3
#define COL 5

int main () 
{
	// Initialisation de la matrice de dimensions LIGxCOL
	// TODO
	int mat[LIG][COL];
		for (int l=0; l<LIG; l++)
		for (int c=0; c<COL; c++)
			mat[l][c] = l*c;

	// Affichage de la matrice
	for (int l=0; l<LIG; l++) {
		for (int c=0; c<COL; c++)
			printf("%3d", mat[l][c]);
		printf("\n");
	}


	exit(0);
}
===== Question 7 =====
Complétez ce programme afin qu'il saisisse 6 entiers à l'aide de scanf, 
les stocke dans un tableau, puis calcule et affiche la moyenne de ces entiers.

Attention, la moyenne d'entiers n’est pas toujours un entier !
--- Code de Base ---
#include <stdio.h>
#include <stdlib.h>

#define TAILLE 6

int main () 
{
	int i;
	int val;
	int tab[TAILLE];

	// Initialisation du tableau
	// TODO

	// Calcul de la moyenne
	// TODO
	
	// Affichage de la moyenne
	// TODO

	exit(0);
}
--- Code Solution ---
#include <stdio.h>
#include <stdlib.h>

#define TAILLE 6

int main () 
{
	int i;
	int val;
	int tab[TAILLE];

	// Initialisation du tableau
	for (i=0; i<TAILLE; i++) {
	    scanf("%d", &val);
	    tab[i] = val;
	}

	// Calcul de la moyenne
	float moy = 0;
	for (i=0; i<TAILLE; i++) {
	    moy += tab[i];
	}
	
	// Affichage de la moyenne
	printf("%f\n", moy/TAILLE);

	exit(0);
}
===== Question 8 (Bonus) =====
Complétez le programme afin qu'il détermine et affiche la catégorie d'un tableau de 5 entiers entrés par l'utilisateur, 
parmi les 4 catégories suivantes :

- "Le tableau est croissant"
- "Le tableau est decroissant"
- "Le tableau est constant"
- "Le tableau est quelconque"

Remarquez que le tableau [1,1,2,3,3] est bien un tableau croissant.

Sachez que ce traitement peut être réalisé en un seul parcours du tableau.
--- Code de Base ---
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define TAILLE 5

int main () 
{
	int i;
	int val;
	int tab[TAILLE];

	// Initialisation du tableau
	for (i=0; i<TAILLE; i++) {
	    scanf("%d", &val);
		tab[i] = val;
	}

	// Analyse du tableau
	// TODO

	exit(0);
}
--- Code Solution ---
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define TAILLE 5

int main () 
{
	int i;
	int val;
	int tab[TAILLE];

	// Initialisation du tableau
	for (i=0; i<TAILLE; i++) {
	    scanf("%d", &val);
	    tab[i] = val;
	}

	// Analyse du tableau
	bool croissant = true;
	bool decroissant = true;
	bool constant = true;
	for (i=1; i<TAILLE; i++) {
	    if (tab[i-1] < tab[i]) {
	        decroissant = false;
	        constant = false;
	    } 
	    else if (tab[i-1] > tab[i]) {
	        croissant = false;
	        constant = false;
	    }
	}
	
	printf("Le tableau est ");
	if (constant) printf("constant\n");
	else if (croissant) printf("croissant\n");
	else if (decroissant) printf("decroissant\n");
	else printf("quelconque\n");

	exit(0);
}
=======================